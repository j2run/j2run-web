map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

# Default server to handle IP access
server {
  listen 80 default_server;
  return 444;
}

server {
  listen       80;
  server_name  dev.j2run.com;

  location ~ ^/api/(.*)$ {
    proxy_pass http://j2-backend:3000/$1$is_args$args;
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /socket.io {
    proxy_pass http://j2-backend:3000/socket.io;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location ~ ^(.*)$ {
    proxy_pass http://172.23.0.6:5173$1$is_args$args;
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # add_header Last-Modified $date_gmt;
    # add_header Cache-Control 'no-store, no-cache';
    # if_modified_since off;
    # expires off;
    # etag off;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }
}